[versions]
# Plugins
agp = "8.3.1"
kotlin = "1.9.23"
ksp = "1.9.23-1.0.20"
detekt = "1.23.6"

# Android
coreKtx = "1.13.1"
appcompat = "1.7.0"
material = "1.12.0"
activity = "1.9.3"
constraintlayout = "2.2.1"

# Testing
junit = "4.13.2"
junitVersion = "1.2.1"
espressoCore = "3.6.1"

# Kotlin
coroutines = "1.8.1"
serialization = "1.6.3"
lifecycle = "2.8.7"

# Network
retrofit = "2.9.0"
okhttp = "4.12.0"

# DI
dagger = "2.56"

# Custom plugins
walkingApplication = "0.0.1-a"
walkingLibrary = "0.0.1-a"
walkingKotlin = "0.0.1-a"
walkingDetekt = "0.0.1-a"

# JVM
jvmTarget = "1.8"

# Auth
passport = "3.1.3"

# Navigation
cicerone = "7.1"

# Encrypted Prefs
encryptedPrefs = "1.1.0-alpha06"

# Coil - Images
coil = "2.6.0"

# Maps - OSM
osmdroid = "6.1.16"

[libraries]
# Gradle plugins
android-gradlePlugin = { group = "com.android.tools.build", name = "gradle", version.ref = "agp" }
kotlin-gradlePlugin = { group = "org.jetbrains.kotlin", name = "kotlin-gradle-plugin", version.ref = "kotlin" }

# AndroidX
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
androidx-activity = { group = "androidx.activity", name = "activity", version.ref = "activity" }
androidx-constraintlayout = { group = "androidx.constraintlayout", name = "constraintlayout", version.ref = "constraintlayout" }

# Material
material = { group = "com.google.android.material", name = "material", version.ref = "material" }

# Testing
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junitVersion" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }

# Detekt
detekt-formatting = { group = "io.gitlab.arturbosch.detekt", name = "detekt-formatting", version.ref = "detekt" }
detekt-gradlePlugin = { group = "io.gitlab.arturbosch.detekt", name = "detekt-gradle-plugin", version.ref = "detekt" }
detekt-cli = { group = "io.gitlab.arturbosch.detekt", name = "detekt-cli", version.ref = "detekt" }

# Dagger
dagger = { group = "com.google.dagger", name = "dagger", version.ref = "dagger" }
daggerCompiler = { group = "com.google.dagger", name = "dagger-compiler", version.ref = "dagger" }

# Coroutines
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }

# Lifecycle
androidx-lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle" }
androidx-lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle" }

# Network
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofitSerialization = { module = "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter", version = "1.0.0" }
okhttpLogging = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }

# Serialization
serializationJson = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization" }

# Authorization
yandex-authSdk = { module = "com.yandex.android:authsdk", version.ref = "passport" }

# Navigation
cicerone = { module = "com.github.terrakok:cicerone", version.ref = "cicerone" }

# Encrypted Prefs
androidx-securityCrypto = { module = "androidx.security:security-crypto", version.ref = "encryptedPrefs" }

# Coil - Images
coil = { module = "io.coil-kt:coil", version.ref = "coil" }

# Maps - OSM
osmdroid-android = { module = "org.osmdroid:osmdroid-android", version.ref = "osmdroid" }
osmdroid-geopackage = { module = "org.osmdroid:osmdroid-geopackage", version.ref = "osmdroid" }

[plugins]
# Custom plugins
walking-application = { id = "walking.android.application", version.ref = "walkingApplication" }
walking-library = { id = "walking.android.library", version.ref = "walkingLibrary" }
walking-kotlin = { id = "walking.android.kotlin", version.ref = "walkingKotlin" }
walking-detekt = { id = "walking.detekt", version.ref = "walkingDetekt" }

# Standard plugins
android-application = { id = "com.android.application", version.ref = "agp" }
android-library = { id = "com.android.library", version.ref = "agp" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
parcelize = { id = "kotlin-parcelize" }
